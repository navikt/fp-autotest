name: Utf√∏rer tester mot SUT

on:
  workflow_call:

jobs:
  rapport:
    name: Lager og publiserer test rapport
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'navikt/fp-autotest'
      - name: Henter testresultat for fpsak
        uses: actions/download-artifact@v3
        continue-on-error: true
        with:
          name: fpsak-testresultat
          path: .
      - name: Henter testresultat for fptilbake
        uses: actions/download-artifact@v3
        continue-on-error: true
        with:
          name: fptilbake-testresultat
          path: .
      - name: Henter testresultat for verdikjede
        uses: actions/download-artifact@v3
        continue-on-error: true
        with:
          name: verdikjede-testresultat
          path: .
      - name: Pakk ut testresultat
        if: success()
        run: |
          if [ -f "fpsak.tar.gz" ]; then echo "Testresultat fpsak funnet" && mkdir fpsak && tar -xzf fpsak.tar.gz --directory fpsak; fi
          if [ -f "fptilbake.tar.gz" ]; then echo "Testresultat fptilbake funnet" && mkdir fptilbake && tar -xzf fptilbake.tar.gz --directory fptilbake; fi
          if [ -f "verdikjede.tar.gz" ]; then echo "Testresultat verdikjede funnet" && mkdir verdikjede && tar -xzf verdikjede.tar.gz --directory verdikjede; fi
      - name: Hent eksistrende testrapport og overskriv med nytt test resultat
        if: success()
        id: ghpages
        run: |
          git fetch origin gh-pages
          mkdir gh-pages
          git --work-tree=gh-pages checkout origin/gh-pages
          if [ -d "fpsak" ]; then echo "Oppdatere testresultat for fpsak" && rm -rf gh-pages/fpsak && cp -r fpsak gh-pages; fi
          if [ -d "fptilbake" ]; then echo "Oppdatere testresultat for fptilbake" && rm -rf gh-pages/fptilbake && cp -r fptilbake gh-pages; fi
          if [ -d "verdikjede" ]; then echo "Oppdatere testresultat for verdikjede" && rm -rf gh-pages/verdikjede && cp -r verdikjede gh-pages; fi
      - name: Deploy testrapport
        if: always() && steps.ghpages.outcome == 'success'
        uses: crazy-max/ghaction-github-pages@v3.1.0
        with:
          repo: 'navikt/fp-autotest'
          target_branch: gh-pages
          build_dir: gh-pages
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_AUTOTEST }}
