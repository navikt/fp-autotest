name: Report and notify about testresults

on:
  workflow_call:
    inputs:
      fpsak:
        required: false
        type: string
        description: "Resluat av kj√∏ring av test suite (skipped|test-failure|logg-failure|success)"
        default: 'skipped'
      fptilbake:
        required: false
        type: string
        description: "Fpsak resultat tester"
        default: 'skipped'
      verdikjede:
        required: false
        type: string
        description: "Fpsak resultat tester"
        default: 'skipped'


jobs:
  rapport:
    name: Lager og publiserer test rapport
    runs-on: ubuntu-latest
    continue-on-error: true
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'navikt/fp-autotest'

      - name: Download artifact
        id: download-artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          # Optional, GitHub token, a Personal Access Token with `public_repo` scope if needed
          # Required, if the artifact is from a different repo
          # Required, if the repo is private a Personal Access Token with `repo` scope is needed
          github_token: ${{secrets.GITHUB_TOKEN}}

          branch: master

          # Optional, will use specified workflow run
          run_id: ${{ github.run_id }}
          # Optional, uploaded artifact name,
          # will download all artifacts if not specified
          # and extract them into respective subdirectories
          # https://github.com/actions/download-artifact#download-all-artifacts
          name: artifact_name
          # Opti
          # Optional, defaults to current repo
          repo: ${{ github.repository }}


      - name: Henter testresultat for fpsak
        if: ${{ !contains(inputs.fpsak, 'skipped') }}
        uses: actions/download-artifact@v3
        with:
          name: fpsak-testresultat
          path: .
      - name: Henter testresultat for fptilbake
        if: ${{ !contains(inputs.fptilbake, 'skipped') }}
        uses: actions/download-artifact@v3
        with:
          name: fptilbake-testresultat
          path: .
      - name: Henter testresultat for verdikjede
        if: ${{ !contains(inputs.verdikjede, 'skipped') }}
        uses: actions/download-artifact@v3
        with:
          name: verdikjede-testresultat
          path: .
      - name: Pakk ut testresultat
        if: success()
        run: |
          if [ -f "fpsak.tar.gz" ]; then echo "Testresultat fpsak funnet" && mkdir fpsak && tar -xzf fpsak.tar.gz --directory fpsak; fi
          if [ -f "fptilbake.tar.gz" ]; then echo "Testresultat fptilbake funnet" && mkdir fptilbake && tar -xzf fptilbake.tar.gz --directory fptilbake; fi
          if [ -f "verdikjede.tar.gz" ]; then echo "Testresultat verdikjede funnet" && mkdir verdikjede && tar -xzf verdikjede.tar.gz --directory verdikjede; fi
      - name: Hent eksistrende testrapport og overskriv med nytt test resultat
        if: success()
        id: ghpages
        run: |
          git fetch origin gh-pages
          mkdir gh-pages
          git --work-tree=gh-pages checkout origin/gh-pages
          if [ -d "fpsak" ]; then echo "Oppdatere testresultat for fpsak" && rm -rf gh-pages/fpsak && cp -r fpsak gh-pages; fi
          if [ -d "fptilbake" ]; then echo "Oppdatere testresultat for fptilbake" && rm -rf gh-pages/fptilbake && cp -r fptilbake gh-pages; fi
          if [ -d "verdikjede" ]; then echo "Oppdatere testresultat for verdikjede" && rm -rf gh-pages/verdikjede && cp -r verdikjede gh-pages; fi

      - name: Deploy testrapport
        if: always() && steps.ghpages.outcome == 'success'
        uses: crazy-max/ghaction-github-pages@v3.1.0
        with:
          repo: 'navikt/fp-autotest'
          target_branch: gh-pages
          build_dir: gh-pages
        env:
          GH_PAT: ${{ secrets.PAT }}
