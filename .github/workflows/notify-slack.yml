name: notify-slack
on:
  repository_dispatch:
    types: [notify-slack]

env:
  TRIGGER:  ${{ github.event.client_payload.trigger }}
  VERSION: ${{ github.event.client_payload.version }}
  STACK_STARTED:  ${{ github.event.client_payload.stack_started }}
  TEST_OUTCOME:  ${{ github.event.client_payload.test_outcome }}
  TEST_RESULTAT: ${{ github.event.client_payload.test_resultat }}
  RUN_ID: ${{ github.event.client_payload.run_id }}

jobs:
  notify:
    runs-on: ubuntu-latest

    steps:

      - name: Henter ut historie
        id: slacknotify
        uses: actions/checkout@v2.3.2
        with:
          repository: ${{ env.TRIGGER }}
          path: ${{ env.TRIGGER }}
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          fetch-depth: 5

      - name: Hent ut versjon fra forrige issue
        if: always() && steps.slacknotify.outcome == 'success'
        shell: bash
        run: |
          CURRENT_HASH=$(echo "${{ env.VERSION }}" | awk -F'-' '{print $3}')
          cd "${{ env.TRIGGER }}"
          git remote -v
          git fetch
          echo "::set-env name=DIFFERANSE::$(git log --pretty=format:"%s; author: %an" -n 1 ${CURRENT_HASH})"

      - name: Bygger opp slack melding
        if: always()
        shell: bash
        run: |
          if [ ${{ env.STACK_STARTED }} == true ]; then
            echo "Stack up and running!"
            if [ ${{ env.TRIGGER }} == navikt/fp-sak ] || [ ${{ env.TRIGGER }} == navikt/fp-abakus ] ; then
              echo "::set-env name=SLACK_MESSAGE::*Trigger*: ${{ env.TRIGGER }}:${{ env.VERSION }}%0A*Resultat*: ${{ env.TEST_RESULTAT }}, Rapport: <https://navikt.github.io/fpsak-autotest/fpsak|Allure rapport>%0A*Endringer*: ${{ env.DIFFERANSE }}%0A*Action URL*: <https://github.com/navikt/fpsak-autotest/actions/runs/${{ env.RUN_ID }}|url"
              if [ ${{ env.TEST_OUTCOME }} == success ]; then
                echo "Test success!"
                echo "::set-env name=SLACK_TITLE::Autotestene er kjørt UTEN feil :rocket:"
                echo "::set-env name=SLACK_COLOR::#37df1d"
              else
                echo "Test failure!"
                echo "::set-env name=SLACK_TITLE::Autotestene feilet :boom:"
                echo "::set-env name=SLACK_COLOR::#df1515"
              fi
            else
              echo "::set-env name=SLACK_MESSAGE::*Trigger*: ${{ env.TRIGGER }}:${{ env.VERSION }}%0A*Resultat*: ${{ env.TEST_RESULTAT }}, Rapport: <https://navikt.github.io/fpsak-autotest/verdikjede|Allure rapport>%0A*Endringer*: ${{ env.DIFFERANSE }}%0A*Action URL*: <https://github.com/navikt/fpsak-autotest/actions/runs/${{ env.RUN_ID }}|url"
              if [ ${{ env.TEST_OUTCOME }} == success ]; then
                echo "Test success!"
                echo "::set-env name=SLACK_TITLE::Verdikjedetestene er kjørt UTEN feil :rocket:"
                echo "::set-env name=SLACK_COLOR::#37df1d"
              else
                echo "Test failure!"
                echo "::set-env name=SLACK_TITLE::Verdikjedetestene feilet :boom:"
                echo "::set-env name=SLACK_COLOR::#df1515"
              fi
            fi
          else
            echo "Noe gikk galt. GHA fikk ikke opp verdikjeden"
            echo "::set-env name=SLACK_TITLE::Noe gikk galt. GHA fikk ikke opp verdikjeden :man-shrugging:"
            echo "::set-env name=SLACK_MESSAGE::*Trigger*: ${{ env.TRIGGER }}:${{ env.VERSION }}%0A*Endringer*: ${{ env.DIFFERANSE }}%0A*Action URL*: <https://github.com/navikt/fpsak-autotest/actions/runs/${{ env.RUN_ID }}|url"
            echo "::set-env name=SLACK_COLOR::#e79a07"
          fi

      - name: Slack Notification
        if: always()
        uses: rtCamp/action-slack-notify@v2.1.0
        env:
          SLACK_CHANNEL: vtp-autotest-resultat
          SLACK_COLOR: ${{ env.SLACK_COLOR }}
          SLACK_ICON: https://github.com/github.png?size=48
          SLACK_TITLE: ${{ env.SLACK_TITLE }}
          SLACK_MESSAGE: ${{ env.SLACK_MESSAGE }}
          SLACK_USERNAME: Github Action
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_FOOTER: ''
          MSG_MINIMAL: true

