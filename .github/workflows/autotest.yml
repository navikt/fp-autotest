name: Utfører tester mot SUT

on:
  workflow_call:
    inputs:
      build-version:
        required: false
        type: string
        description: 'Docker tag (from repository)'
        default: 'latest'
      test-fpsak:
        required: false
        type: boolean
        description: skal fpsak testes
        default: false
      test-fptilbake:
        required: false
        type: boolean
        description: skal fptilbake testes
        default: false
      test-verdikjede:
        required: false
        type: boolean
        description: skal verdikjede testes
        default: false
    outputs:
      fpsak:
        description: "Fpsak resultat tester"
        value: ${{ jobs.fpsak-autotester.outputs.result }}
      fptilbake:
        description: "Fptilbake resultat tester"
        value: ${{ jobs.fptilbake-tester.outputs.result }}
      verdikjede:
        description: "Verdikjedetester resultat"
        value: ${{ jobs.verdikjedetestene.outputs.result }}

env:
  JUIPTER_PARALLELISM_VK: 8
  JUIPTER_PARALLELISM_FP: 16
  GITHUB_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

jobs:
  fpsak-autotester:
    name: Kjører fpsak spesifikke tester som er trigget av ${{ github.repository }} ${{ inputs.build-version }}
    if: inputs.test-fpsak
    runs-on: ubuntu-latest-8-cores
    timeout-minutes: 15
    outputs:
      result: ${{ steps.resultat.outcome }}
    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'navikt/fp-autotest'
          ref: 'master'
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'maven'
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # Use commit-sha1 instead of tag for security concerns
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup fpsak og dens avhengigheter
        id: setup
        run: |
          cd resources/keystore
          ./make-dummy-keystore.sh
          cd ../../lokal-utvikling
          ./setup-lokal-utvikling.sh --mock fptilbake --mock fpoppdrag --mock fpformidling --mock fprisk
          cd docker-compose-lokal
          ./update-versions.sh ${{ github.repository }} ${{ inputs.build-version }}
          docker compose -f compose.yml -f compose-github.yml up --quiet-pull --wait fpsak || (docker ps ; echo "Oppstart feilet. Se etter tjenester som er \"unhealthy\" eller \"restarting\" i listen over." ; exit 1)

      - name: Utfører foreldrepengetestene for fpsak
        id: tester
        run: mvn test -e --batch-mode --settings .github/.m2/settings.xml -Djuipter.parallelism=${{ env.JUIPTER_PARALLELISM_FP }} -P fpsak > >(tee test-result-log.txt)

      - name: Sjekker loggen etter feil
        if: always() && steps.setup.outcome == 'success'
        id: logger
        run: mvn test -e --batch-mode --settings .github/.m2/settings.xml -Djuipter.parallelism=${{ env.JUIPTER_PARALLELISM_FP }} -P loggfeil

      - name: Utled testresultat
        id: resultat
        run: echo "resultat=test-${{ steps.tester.outcome }} logg-${{ steps.logger.outcome }}" >> $GITHUB_OUTPUT

      - name: Generer testrapport
        if: |
          always() &&
          steps.setup.outcome == 'success' &&
          steps.tester.outcome != 'skipped' &&
          steps.tester.outcome != 'cancelled'
        id: ghpages
        run: |
          git fetch origin gh-pages
          mkdir gh-pages
          git --work-tree=gh-pages checkout origin/gh-pages -- fpsak/history
          resources/allure/set-environment-variables-fpsak.sh ${{ github.repository }}
          cp resources/allure/environment.properties target/allure-results
          cp resources/allure/categories.json target/allure-results
          cp -r gh-pages/fpsak/history target/allure-results
          mvn allure:report --batch-mode --settings .github/.m2/settings.xml

      - name: Tar testresultat
        if: always() && steps.ghpages.outcome == 'success'
        run: tar -czf fpsak.tar.gz -C target/allure-report .

      - name: Laste opp testresultat
        if: always() && steps.ghpages.outcome == 'success'
        uses: actions/upload-artifact@v3
        with:
          name: fpsak-testresultat
          path: fpsak.tar.gz
          retention-days: 1

      - name: Dumper logger for feilsøking
        if: failure() && steps.setup.outcome != 'skipped' && steps.setup.outcome != 'cancelled'
        run: |
          mkdir container-logs
          cd container-logs
          docker ps -a --format '{{.Names}}' | while read pod; do docker logs $pod > $pod.log 2>&1; done

      - name: Laste opp logger
        if: failure() && steps.setup.outcome != 'skipped' && steps.setup.outcome != 'cancelled'
        uses: actions/upload-artifact@v3
        with:
          name: logs-autotest
          path: container-logs

  fptilbake-tester:
    name: Kjører fptilbake spesifikke tester som er trigget av ${{ github.repository }} ${{ inputs.build-version }}
    if: inputs.test-fptilbake
    runs-on: ubuntu-latest
    timeout-minutes: 15
    outputs:
      result: ${{ steps.resultat.outcome }}
    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'navikt/fp-autotest'
          ref: 'master'

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'maven'

      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # Use commit-sha1 instead of tag for security concerns
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup verdikjeden
        id: setup
        run: |
          cd resources/keystore
          ./make-dummy-keystore.sh
          cd ../pipeline
          ./update-versions.sh ${{ github.repository }} ${{ inputs.build-version }}
          docker compose -f compose.yml -f compose-github.yml up --quiet-pull --wait fpoppdrag fptilbake fprisk fpdokgen fpabonnent fpsoknad-mottak || (docker ps ; echo "Oppstart feilet. Se etter tjenester som er \"unhealthy\" eller \"restarting\" i listen over." ; exit 1)

      - name: Sjekker minneforbruk
        if: always()
        run: |
          docker stats --no-stream
          free -m

      - name: Utfører testene for fptilbake
        id: tester
        run: mvn test -e --batch-mode --settings .github/.m2/settings.xml -Djuipter.parallelism=${{ env.JUIPTER_PARALLELISM_VK }} -P fptilbake > >(tee test-result-log.txt)

      - name: Sjekker loggen etter feil
        if: always() && steps.setup.outcome == 'success'
        id: logger
        run: mvn test -e --batch-mode --settings .github/.m2/settings.xml -Djuipter.parallelism=${{ env.JUIPTER_PARALLELISM_FP }} -P loggfeil -DikkeSjekkLengdeAvContainer=fpinfo,fpdokgen,fpabonnent

      - name: Utled testresultat
        id: resultat
        run: echo "resultat=test-${{ steps.tester.outcome }} logg-${{ steps.logger.outcome }}" >> $GITHUB_OUTPUT

      - name: Generer testrapport
        if: |
          always() &&
          steps.setup.outcome == 'success' &&
          steps.tester.outcome != 'skipped' &&
          steps.tester.outcome != 'cancelled'
        id: ghpages
        run: |
          git fetch origin gh-pages
          mkdir gh-pages
          git --work-tree=gh-pages checkout origin/gh-pages -- fptilbake/history
          resources/allure/set-environment-variables.sh ${{ github.repository }}
          cp resources/allure/environment.properties target/allure-results
          cp resources/allure/categories.json target/allure-results
          cp -r gh-pages/fptilbake/history target/allure-results
          mvn allure:report --batch-mode --settings .github/.m2/settings.xml

      - name: Tar testresultat
        if: always() && steps.ghpages.outcome == 'success'
        run: tar -czf fptilbake.tar.gz -C target/allure-report .

      - name: Laste opp testresultat
        if: always() && steps.ghpages.outcome == 'success'
        uses: actions/upload-artifact@v3
        with:
          name: fptilbake-testresultat
          path: fptilbake.tar.gz
          retention-days: 1

      - name: Dumper logger for feilsøking
        if: failure() && steps.setup.outcome != 'skipped' && steps.setup.outcome != 'cancelled'
        run: |
          mkdir container-logs
          cd container-logs
          docker ps -a --format '{{.Names}}' | while read pod; do docker logs $pod > $pod.log 2>&1; done

      - name: Laste opp logger
        if: failure() && steps.setup.outcome != 'skipped' && steps.setup.outcome != 'cancelled'
        uses: actions/upload-artifact@v3
        with:
          name: logs-fptilbake-tester
          path: container-logs

  verdikjedetestene:
    name: Kjører verdikjedetestene som er trigget av ${{ github.repository }} ${{ inputs.build-version }}
    if: inputs.test-verdikjede
    runs-on: ubuntu-latest-8-cores
    timeout-minutes: 20
    outputs:
      result: ${{ steps.resultat.outcome }}
    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'navikt/fp-autotest'
          ref: 'master'

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'maven'

      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # Use commit-sha1 instead of tag for security concerns
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup verdikjeden
        id: setup
        run: |
          cd resources/keystore
          ./make-dummy-keystore.sh
          cd ../pipeline
          ./update-versions.sh ${{ github.repository }} ${{ inputs.build-version }}
          docker compose -f compose.yml -f compose-github.yml up --quiet-pull --wait fpsak fpformidling fpdokgen fpoppdrag fptilbake fprisk fpabonnent fpinfo fpfordel fpsoknad-mottak || (docker ps ; echo "Oppstart feilet. Se etter tjenester som er \"unhealthy\" eller \"restarting\" i listen over." ; exit 1)

      - name: Sjekker minneforbruk
        if: always()
        run: |
          docker stats --no-stream
          free -m
      - name: Utfører verdikjedetestene
        id: tester
        run: mvn test -e --batch-mode --settings .github/.m2/settings.xml -Djuipter.parallelism=${{ env.JUIPTER_PARALLELISM_VK }} -P verdikjede > >(tee test-result-log.txt)

      - name: Sjekker loggen etter feil og lekket sensitiv data.
        if: always() && steps.setup.outcome == 'success'
        id: logger
        run: mvn test -e --batch-mode --settings .github/.m2/settings.xml -Djuipter.parallelism=${{ env.JUIPTER_PARALLELISM_VK }} -P logger-DikkeSjekkLengdeAvContainer=fpdokgen

      - name: Utled testresultat
        id: resultat
        run: echo "resultat=test-${{ steps.tester.outcome }} logg-${{ steps.logger.outcome }}" >> $GITHUB_OUTPUT

      - name: Sjekker minneforbruk
        if: always()
        run: |
          docker stats --no-stream
          free -m

      - name: Generer testrapport
        if: |
          always() &&
          steps.setup.outcome == 'success' &&
          steps.tester.outcome != 'skipped' &&
          steps.tester.outcome != 'cancelled'
        id: ghpages
        run: |
          git fetch origin gh-pages
          mkdir gh-pages
          git --work-tree=gh-pages checkout origin/gh-pages -- verdikjede/history
          resources/allure/set-environment-variables.sh ${{ github.repository }}
          cp resources/allure/environment.properties target/allure-results
          cp resources/allure/categories.json target/allure-results
          cp -r gh-pages/verdikjede/history target/allure-results
          mvn allure:report --batch-mode --settings .github/.m2/settings.xml

      - name: Tar testresultat
        if: always() && steps.ghpages.outcome == 'success'
        run: tar -czf verdikjede.tar.gz -C target/allure-report .

      - name: Laste opp testresultat
        if: always() && steps.ghpages.outcome == 'success'
        uses: actions/upload-artifact@v3
        with:
          name: verdikjede-testresultat
          path: verdikjede.tar.gz
          retention-days: 1

      - name: Dumper logger for feilsøking
        if: failure() && steps.setup.outcome != 'skipped' && steps.setup.outcome != 'cancelled'
        run: |
          mkdir container-logs
          cd container-logs
          docker ps -a --format '{{.Names}}' | while read pod; do docker logs $pod > $pod.log 2>&1; done

      - name: Laste opp logger
        if: failure() && steps.setup.outcome != 'skipped' && steps.setup.outcome != 'cancelled'
        uses: actions/upload-artifact@v3
        with:
          name: logs-verdikjedetester
          path: container-logs
